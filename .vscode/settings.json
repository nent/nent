{
  "cSpell.words": [
    "Codacy",
    "Debouncing",
    "Delimeter",
    "HTMLN",
    "HTMLX",
    "NENT",
    "Stackedit",
    "Themeable",
    "Vite",
    "abcdefghijklmnopqrstuvwxyz",
    "arrify",
    "autogenerated",
    "automerge",
    "browserslist",
    "commitlint",
    "copyfiles",
    "cview",
    "delimeters",
    "dependabot",
    "doctoc",
    "editorconfig",
    "errored",
    "eval",
    "fakehtml",
    "frontmatter",
    "gitter",
    "gsutil",
    "gtag",
    "hashbang",
    "installable",
    "jfrom",
    "jsdelivr",
    "jsnext",
    "jsonata",
    "linebreak",
    "loadash",
    "markdownlint",
    "maxlevel",
    "modulepreload",
    "msapplication",
    "navigations",
    "nbsp",
    "newbase",
    "nomodule",
    "noslash",
    "notitle",
    "nowait",
    "onbeforeexit",
    "onloaderror",
    "onplayerror",
    "paren",
    "pinst",
    "playsinline",
    "plusplus",
    "ponicode",
    "popperjs",
    "postbuild",
    "postpublish",
    "prebuild",
    "precache",
    "precaching",
    "preconnect",
    "precore",
    "predeploy",
    "preid",
    "prepages",
    "purgecss",
    "recalc",
    "referrerpolicy",
    "rehype",
    "remixicon",
    "sarif",
    "searchjs",
    "storyinput",
    "stylelint",
    "tailwindcss",
    "timedout",
    "uhtml",
    "unhinted",
    "unlisten",
    "unpkgd",
    "unproxy",
    "vime",
    "webm",
    "webnamespaces",
    "youtube"
  ],
  "editor.codeActionsOnSave": {
    "source.fixAll.markdownlint": false,
    "source.organizeImports": true,
    "source.fixAll.eslint": true
  },
  "[markdown]": {
    "editor.wordWrap": "on",
    "editor.quickSuggestions": true,
    "editor.formatOnSave": false
  },
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "typescript"
  ],
  "vsicons.associations.files": [
    {
      "icon": "node",
      "extensions": [
        ".rc"
      ],
      "format": "svg"
    },
    {
      "icon": "config",
      "extensions": [
        ".config.js"
      ],
      "format": "svg"
    }
  ],
  "exportall.config.folderListener": [],
  "editor.formatOnSaveMode": "file",
  "dotupGenerateTestFile.testFileLocation": "source file directory",
  "dotupGenerateTestFile.testFileSuffix": "spec",
  "dotupGenerateTestFile.template.file": [
    "${Imports}",
    "",
    "${FileTests}"
  ],
  "dotupGenerateTestFile.template.class": [
    "describe('${ClassName}', () => {",
    "",
    "${ClassTests}",
    "});",
    ""
  ],
  "dotupGenerateTestFile.template.asyncMethod": [
    "it('${ClassName}-${MethodName}', async () => {",
    "// Arguments",
    "${Declarations}",
    "",
    "// Method call",
    "${MemberTests}",
    "});",
    ""
  ],
  "dotupGenerateTestFile.template.function": [
    "it('${ClassName}-${MethodName}', () => {",
    "// Arguments",
    "${Declarations}",
    "",
    "// Method call",
    "${MemberTests}",
    "",
    "// Expect result",
    "expect(${MethodCallResult}).not.toBeUndefine();",
    "});",
    ""
  ],
  "dotupGenerateTestFile.template.property": [
    "it('${ClassName}-${PropertyName}', () => {",
    "// Arguments",
    "${Declarations}",
    "",
    "// Property call",
    "${MemberTests}",
    "",
    "// Expect result",
    "expect(${PropertyGetResult}).toBe(${PropertySetVariable});",
    "});",
    ""
  ],
  "dotupGenerateTestFile.template.asyncFunction": [
    "it('${ClassName}-${MethodName}', async () => {",
    "// Arguments",
    "${Declarations}",
    "",
    "// Method call",
    "${MemberTests}",
    "",
    "// Expect result",
    "expect(${MethodCallResult}).not.toBeUndefined();",
    "});",
    ""
  ],
  "workbench.colorCustomizations": {
    "activityBar.activeBackground": "#cec2ef",
    "activityBar.activeBorder": "#d1714e",
    "activityBar.background": "#cec2ef",
    "activityBar.foreground": "#15202b",
    "activityBar.inactiveForeground": "#15202b99",
    "activityBarBadge.background": "#d1714e",
    "activityBarBadge.foreground": "#15202b",
    "statusBar.background": "#ae9ae4",
    "statusBar.foreground": "#15202b",
    "statusBarItem.hoverBackground": "#8e72d9",
    "titleBar.activeBackground": "#ae9ae4",
    "titleBar.activeForeground": "#15202b",
    "titleBar.inactiveBackground": "#ae9ae499",
    "titleBar.inactiveForeground": "#15202b99"
  },
  "peacock.remoteColor": "#ae9ae4",
  "commit-message-editor.tokens": [
    {
      "label": "Type",
      "name": "type",
      "type": "enum",
      "options": [
        {
          "label": "---",
          "value": ""
        },
        {
          "label": "build(üë∑)",
          "description": "Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)"
        },
        {
          "label": "chore(üßπ)",
          "description": "Updating grunt tasks etc; no production code change"
        },
        {
          "label": "ci(‚öôÔ∏è)",
          "description": "Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)"
        },
        {
          "label": "docs(üìù)",
          "description": "Documentation only changes"
        },
        {
          "label": "feat(‚ú®)",
          "description": "A new feature"
        },
        {
          "label": "fix(üîß)",
          "description": "A bug fix"
        },
        {
          "label": "perf(üõ†Ô∏è)",
          "description": "A code change that improves performance"
        },
        {
          "label": "refactor(üöß)",
          "description": "A code change that neither fixes a bug nor adds a feature"
        },
        {
          "label": "revert(üîô)"
        },
        {
          "label": "style(üåü)",
          "description": "Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)"
        },
        {
          "label": "test(üß™)",
          "description": "Adding missing tests or correcting existing tests"
        }
      ],
      "description": "Type of changes"
    },
    {
      "label": "Description",
      "name": "description",
      "description": "Short description in the subject line.",
      "type": "text",
      "multiline": false
    },
    {
      "label": "Body",
      "name": "body",
      "description": "Optional body",
      "type": "text",
      "multiline": true,
      "lines": 5,
      "maxLines": 10
    },
    {
      "label": "Breaking change",
      "name": "breaking_change",
      "type": "boolean",
      "value": "BREAKING CHANGE: ",
      "default": false
    }
  ],
  "commit-message-editor.dynamicTemplate": [
    "{type}: {description}",
    "",
    "{body}",
    "",
    "{breaking_change}"
  ],
  "commit-message-editor.view.saveAndClose": true,
  "html.format.wrapLineLength": 80,
  "peacock.color": "#ae9ae4"
}
